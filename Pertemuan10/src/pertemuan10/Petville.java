/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pertemuan10;

/**
 *
 * @author Alif
 */
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.filechooser.FileSystemView;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

public class Petville extends javax.swing.JFrame {

    Connection conn;
    Statement stmt;
    PreparedStatement pstmt = null;
    String DB_URL = "jdbc:postgresql://localhost:5432/PBOKe4";
    String USER = "postgres";
    String PASS = "090406";
    String DRIVER = "org.postgresql.Driver";

    String id_hewan, nama_hewan, jenis_hewan;
    int harga;

    public Petville() {
        initComponents();
        connect();
        tampilData();
    }

    public void connect() {
        try {
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Koneksi gagal : " + e.getMessage());
        }
    }

    private void tampilData() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("id_hewan");
        model.addColumn("nama_hewan");
        model.addColumn("jenis_hewan");
        model.addColumn("harga");

        try (
                Connection conn = DriverManager.getConnection(DB_URL, USER, PASS); Statement st = conn.createStatement(); ResultSet rs = st.executeQuery("SELECT * FROM petville ORDER BY id_hewan")) {

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("id_hewan"),
                    rs.getString("nama_hewan"),
                    rs.getString("jenis_hewan"),
                    rs.getInt("harga"),});
            }

            tabelPetville.setModel(model); // tampilkan ke JTable
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal load data: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelPetville = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        Insert = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Cetak = new javax.swing.JButton();
        Upload = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tabelPetville.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        tabelPetville.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID HEWAN", "NAMA HEWAN", "JENIS HEWAN", "HARGA"
            }
        ));
        tabelPetville.setGridColor(new java.awt.Color(0, 0, 0));
        tabelPetville.setShowGrid(true);
        tabelPetville.setSurrendersFocusOnKeystroke(true);
        tabelPetville.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelPetvilleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelPetville);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PETVILLE");

        Insert.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Insert.setText("INSERT");
        Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertActionPerformed(evt);
            }
        });

        Update.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Update.setText("UPDATE");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Delete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Delete.setText("DELETE");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Cetak.setBackground(new java.awt.Color(0, 255, 51));
        Cetak.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Cetak.setText("CETAK");
        Cetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CetakActionPerformed(evt);
            }
        });

        Upload.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Upload.setText("UPLOAD");
        Upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(Insert, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(Cetak, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Upload, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(283, 283, 283))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cetak, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Insert, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(Upload, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertActionPerformed
        InsertDialog dialog = new InsertDialog(this, true); // true = modal
        dialog.setLocationRelativeTo(this); // supaya muncul di tengah
        dialog.setVisible(true);

        tampilData();
    }//GEN-LAST:event_InsertActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        int row = tabelPetville.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data dulu di tabel!");
            return;
        }

        id_hewan = tabelPetville.getValueAt(row, 0).toString();
        nama_hewan = tabelPetville.getValueAt(row, 1).toString();
        jenis_hewan = tabelPetville.getValueAt(row, 2).toString();
        harga = Integer.parseInt(tabelPetville.getValueAt(row, 3).toString());

        UpdateDialog dialog = new UpdateDialog(this, true); // true = modal
        dialog.setLocationRelativeTo(this); // supaya muncul di tengah
        dialog.setVisible(true);

        tampilData();
    }//GEN-LAST:event_UpdateActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed

        int selectedRow = tabelPetville.getSelectedRow();
        if (selectedRow != -1) {
            // Ambil data dari JTable
            String id_hewan = tabelPetville.getValueAt(selectedRow, 0).toString();
            String nama_hewan = tabelPetville.getValueAt(selectedRow, 1).toString();
            String jenis_hewan = tabelPetville.getValueAt(selectedRow, 2).toString();
            int harga = Integer.parseInt(tabelPetville.getValueAt(selectedRow, 3).toString());

            // Kirim data ke DeleteDialog
            DeleteDialog dialog = new DeleteDialog(this, true, id_hewan, nama_hewan, jenis_hewan, harga);
            dialog.setLocationRelativeTo(this); // supaya muncul di tengah
            dialog.setVisible(true);

            tampilData();
        } else {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin dihapus terlebih dahulu!");
        }


    }//GEN-LAST:event_DeleteActionPerformed

    private void CetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CetakActionPerformed
        JasperReport reports;
        String path = ".\\src\\pertemuan10\\PetvilleReport.jasper";
        try {
            Class.forName(DRIVER);
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            reports = (JasperReport) JRLoader.loadObjectFromFile(path);
            JasperPrint jprint = JasperFillManager.fillReport(reports, null, conn);
            JasperViewer viewer = new JasperViewer(jprint, false);
            viewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            viewer.setVisible(true);
        } catch (ClassNotFoundException | SQLException | JRException ex) {
            Logger.getLogger(Petville.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Gagal mencetak laporan: " + ex.getMessage());
        }
    }//GEN-LAST:event_CetakActionPerformed

    private void tabelPetvilleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelPetvilleMouseClicked
        int row = tabelPetville.getSelectedRow();

        id_hewan = tabelPetville.getValueAt(row, 0).toString();
        nama_hewan = tabelPetville.getValueAt(row, 1).toString();
        jenis_hewan = tabelPetville.getValueAt(row, 2).toString();
        harga = Integer.parseInt(tabelPetville.getValueAt(row, 3).toString());
    }//GEN-LAST:event_tabelPetvilleMouseClicked

    private void UploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadActionPerformed

        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File filePilihan = jfc.getSelectedFile();
            System.out.println("yang dipilih : " + filePilihan.getAbsolutePath());

            try (BufferedReader br = new BufferedReader(new FileReader(filePilihan))) {
                Class.forName(DRIVER);
                conn = DriverManager.getConnection(DB_URL, USER, PASS);
                String baris;
                String pemisah = ";";

                while ((baris = br.readLine()) != null) {
                    String[] data = baris.split(pemisah);
                    if (data.length < 4) {
                        continue; // skip baris tidak lengkap
                    }
                    String id_hewan = data[0];
                    String nama_hewan = data[1];
                    String jenis_hewan = data[2];
                    String hargaStr = data[3];

                    // 🔹 Tambahkan baris pembersih karakter aneh di sini
                    id_hewan = id_hewan.replaceAll("[^\\x20-\\x7E]", "").trim();
                    nama_hewan = nama_hewan.replaceAll("[^\\x20-\\x7E]", "").trim();
                    jenis_hewan = jenis_hewan.replaceAll("[^\\x20-\\x7E]", "").trim();
                    hargaStr = hargaStr.replaceAll("[^\\x20-\\x7E]", "").trim();

                    // skip header baris pertama kalau ada
                    if (id_hewan.equalsIgnoreCase("id_hewan")) {
                        continue;
                    }

                    try {
                        int harga = Integer.parseInt(hargaStr);

                        String sql = "INSERT INTO petville (id_hewan, nama_hewan, jenis_hewan, harga) VALUES (?,?,?,?)";
                        pstmt = conn.prepareStatement(sql);
                        pstmt.setString(1, id_hewan);
                        pstmt.setString(2, nama_hewan);
                        pstmt.setString(3, jenis_hewan);
                        pstmt.setInt(4, harga);

                        pstmt.executeUpdate();
                    } catch (NumberFormatException e) {
                        System.out.println("Data harga bukan angka: " + hargaStr);
                    }
                }

                JOptionPane.showMessageDialog(null, "Upload selesai!");
                tampilData();

            } catch (Exception ex) {
                Logger.getLogger(Petville.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Gagal diinput: " + ex.getMessage());
            }
        }

    }//GEN-LAST:event_UploadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Petville.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Petville.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Petville.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Petville.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Petville().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cetak;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Insert;
    private javax.swing.JButton Update;
    private javax.swing.JButton Upload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelPetville;
    // End of variables declaration//GEN-END:variables
}
